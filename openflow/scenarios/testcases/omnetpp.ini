[General]
#ned-path = .;../openflow/src/hyperflow#;../OpenFlowOMNeTSuite-master/openflow/kandoo
network = openflow.networks.Scenario_TestCaseAltered


output-vector-file = ${resultdir}/${inifile}/${inifile}-${configname}-${runnumber}.vec
output-scalar-file = ${resultdir}/${inifile}/${inifile}-${configname}-${runnumber}.sca


sim-time-limit = 60s
repeat = 1
seed-set = ${repetition}

**.numControllers = 1

**.numClients = 1

**.rtt.result-recording-modes = +vector,-stats
**.clientG1[*].tcpApp[*].connectionStarted.result-recording-modes = +vector,+stats
**.clientG1[*].tcpApp[*].connectionEstablished.result-recording-modes = +vector,+stats
**.clientG1[*].tcpApp[*].connectionFinished.result-recording-modes = +vector,+stats
**.clientG1[*].tcpApp[*].transmittedBytes.result-recording-modes = +vector,+stats


**.clientG1[*].tcpApp[*].connectionStarted*.vector-recording = true
**.clientG1[*].tcpApp[*].connectionEstablished*.vector-recording = true
**.clientG1[*].tcpApp[*].connectionFinished*.vector-recording = true
**.clientG1[*].tcpApp[*].transmittedBytes*.vector-recording = true

**.packetsPerSecondAt**.scalar-recording = true

**.packets.result-recording-modes = +count
**.packets*.scalar-recording = true

**.avgQueueSizeAt**.scalar-recording = true
**.controllerInvolvementsFor**.scalar-recording = true

**.nodeInNumPaths**.scalar-recording = true
**.avgPathLength.scalar-recording = true
**.minPathLength.scalar-recording = true
**.maxPathLength.scalar-recording = true
**.numClients.scalar-recording = true
**.numPaths.scalar-recording = true
#
#**.vector-recording = false
#**.scalar-recording = false
#
##**.rtt.result-recording-modes = +vector,-stats
##**.queueSize.result-recording-modes = +vector,+stats
##**.bufferSize.result-recording-modes = +vector,+stats
##**.waitingTime.result-recording-modes = +vector,+stats
#
##**.packets.result-recording-modes = +count
##**.packetBytes.result-recording-modes = +sum
##**.packets*.scalar-recording = true
##**.packetBytes*.scalar-recording = true
#
##**.numPacketIn*.scalar-recording = true
#
##**.bufferSize*.vector-recording = true
##**.queueSize*.vector-recording = true
##**.waitingTime*.vector-recording = true
#
##**.flowTable**.scalar-recording = true
#
##**.pingApp[*].rtt*.vector-recording = true
#
#
##**.controllerApps[*].*.scalar-recording = true
##**.pingApp[*].numLost*.scalar-recording = true
##**.pingApp[*].numOutOfOrderArrivals*.scalar-recording = true
#
##**.vector-recording = false
##**.scalar-recording = false
#
#
#**.spanningTree.startNode = 4
#
#
#**.highlightActivePorts = true
#
# random ping application
**.clientG1[*].numTcpApps = 1
**.clientG2[*].numTcpApps = 1
**.clientG2[*].tcpApp[*].typename = "TCPSinkApp"
**.clientG2[*].tcpApp[*].localPort = 1000
**.clientG1[*].tcpApp[*].typename = "TCPSessionApp"
**.clientG1[*].tcpApp[*].connectAddress = "clientG2[0]"




#openflow params
**.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller1"
**.open_flow_switch*.OF_Switch.connectAt = uniform(0s,1s)
**.open_flow_switch*.etherMAC[*].promiscuous = true

# 404bytes see imix and buffer size of 1.5mb see hp switch 1500000/404
**.OF_Switch.bufferCapacity = 3712

**.OF_Switch.serviceTime = 0.000035s


#1800 00 requests per second on 8xcores 8xthreads and 32 switches (hotice2012-final)
**.open_flow_controller*.serviceTime = 0.000005556s *(${controllerServiceTimeFactor=1} )



**.open_flow_controller*.numControllerApps = 1
**.open_flow_controller*.controllerApps[0].typename = "LearningSwitch"

#
## NIC configuration
#**.ppp[*].queue.frameCapacity = 10  # in routers
#**.open_flow_switch*.tcp.mss = 800
#
#
##linux mint 15 std value
#**.arp.cacheTimeout = 60s
 







####################################################################################################################################
####################################################################################################################################

#FROM LTE - lte.simulations.networks.SingleCell# (edited)

####################################################################################################################################
####################################################################################################################################
tkenv-image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false


##########################################################
#            Simulation parameters                        #
##########################################################
#record-eventlog = true
#eventlog-options = module, displaystring, message
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))
tkenv-default-config =
#debug-on-errors=true
#**.coreDebug = true
 

##########################################################
#                     channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

#################### RLC parameters #######################
##**.fragmentSize=30B
##**.timeout=50s
#################### MAC parameters #######################
#**.mac.queueSize = 1MiB
#**.mac.maxBytesPerTti = 1KiB
#**.mac.macDelay.result-recording-modes = all
#**.mac.macThroughput.result-recording-modes = all
#
## Schedulers
#**.mac.schedulingDisciplineDl = "MAXCI"
#**.mac.schedulingDisciplineUl = "MAXCI"

################ PhyLayer parameters #####################
**.nic.phy.usePropagationDelay = true
**.nic.phy.channelModel=xmldoc("config_channel.xml")

################ Feedback parameters #####################
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
#
## *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

**.mobility.initFromDisplayString = true
#
## UEs
#**.enableHandover = false


################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

## General
#**.deployer.positionUpdateInterval = 0.001s
#**.deployer.broadcastMessageInterval = 1s
#
## RUs
#**.deployer.numRus = 0
#**.deployer.ruRange = 50
#**.deployer.ruTxPower = "50,50,50;"
#**.deployer.ruStartingAngle = 0deg
#**.deployer.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)

# AMC
**.deployer.numRbDl = 6
**.deployer.numRbUl = 6
#**.deployer.rbyDl = 12
#**.deployer.rbyUl = 12
#**.deployer.rbxDl = 7
#**.deployer.rbxUl = 7
#**.deployer.rbPilotDl = 3
#**.deployer.rbPilotUl = 0
#**.deployer.signalDl = 1
#**.deployer.signalUl = 1
#**.deployer.numBands = 1
#**.deployer.numPreferredBands = 1

############### AMC MODULE PARAMETERS ###############
#**.rbAllocationType = "localized"
#**.mac.amcMode = "AUTO"
#**.feedbackType = "ALLBANDS"
#**.feedbackGeneratorType = "IDEAL"
#**.maxHarqRtx = 3
#**.pfAlpha = 0.95
#**.pfTmsAwareDL = false

############### Transmission Power ##################
**.ueTxPower = 26
**.microTxPower = 20
#**.*TxPower = 40

# connect each UE to the eNB
**.ue.macCellId = 1
**.ue.masterId = 1

#Apps
*.ue.numUdpApps = 1
*.ue.udpApp[0].typename = "VoIPReceiver"
*.server.udpApp[*].destAddress = "ue" # obtain the address of the client by reading its index in the array of udpApps
*.server.udpApp[*].localPort = 3088+ancestorIndex(0) 
*.server.udpApp[*].typename = "VoIPSender"
*.server.udpApp[*].startTime = uniform(0s,0.02s)

#**.server.numTcpApps = 1
#**.server.tcpApp[0].typename ="TCPSessionApp"
#**.server.tcpApp[0].localPort = 3000
#**.server.tcpApp[0].connectAddress = "ue"
#**.server.tcpApp[0].localAddress = "server"


#============= Positioning and mobility ============
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m
*.ue.mobility.constraintAreaMaxX = 600m
*.ue.mobility.constraintAreaMaxY = 600m
*.ue.mobility.constraintAreaMinX = 0m
*.ue.mobility.constraintAreaMinY = 0m
*.ue.mobility.initFromDisplayString = false
*.ue.mobility.initialX = uniform(0m,600m)
*.ue.mobility.initialY = uniform(0m,600m)
#*.ue.mobility.speed = 1mps
*.ue.mobilityType = "StationaryMobility"